{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filter","contactsListReducer","createReducer","state","action","payload","contact","id","filterReducers","_","contactsReducer","combineReducers","items","persistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","persistor","persistStore","getContactsList","getFilteredContacts","normalizedFilter","toLocaleLowerCase","name","includes","getInputValueFilter","ContactForm","useState","setName","number","setNumber","handleChange","event","currentTarget","value","dispatch","useDispatch","contactsList","useSelector","resetForm","onSubmit","preventDefault","some","alert","uuidv4","addContacts","className","s","form","label","input","type","pattern","title","required","onChange","button","protoType","PropTypes","func","ContactList","deleteContactFromId","target","list","map","item","tell","onClick","Filter","filterInputValue","filterHendler","string","Container","children","container","App","Form","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c3d2bad6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/addContact');\nexport const deleteContact = createAction('contacts/deleteContact');\nexport const filter = createAction('filter/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact, filter } from './actions';\n\nconst contactsListReducer = createReducer([], {\n  [addContact]: (state, action) => [action.payload, ...state],\n  [deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nexport const filterReducers = createReducer('', {\n  [filter]: (_, action) => action.payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: contactsListReducer,\n  filter: filterReducers,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { contactsReducer } from './reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(persistConfig, contactsReducer),\n});\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export const getContactsList = state => state.contacts.items;\n\nexport const getFilteredContacts = state => {\n  const normalizedFilter = state.contacts.filter.toLocaleLowerCase();\n\n  return state.contacts.items.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n\nexport const getInputValueFilter = state => state.contacts.filter;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport { addContact } from '../../redux/actions';\nimport { getContactsList } from '../../redux/selectors';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(getContactsList);\n\n  const addContacts = ({ name, number }) => {\n    if (contactsList.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    addContacts({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport { getFilteredContacts } from '../../redux/selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const deleteContactFromId = ({ target }) =>\n    dispatch(deleteContact(target.id));\n\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <span className={s.name}>{name}:</span>\n            <span className={s.tell}>{number}</span>\n            <button\n              className={s.button}\n              type=\"button\"\n              id={id}\n              onClick={deleteContactFromId}\n            >\n              remove\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getInputValueFilter } from '../../redux/selectors';\nimport { filter } from '../../redux/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterInputValue = useSelector(getInputValueFilter);\n  const filterHendler = ({ target }) => dispatch(filter(target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\n        required\n        onChange={filterHendler}\n        value={filterInputValue}\n      ></input>\n    </label>\n  );\n};\nFilter.protoType = {\n  filterHendler: PropTypes.string,\n  filterInputValue: PropTypes.func,\n};\n\nexport default Filter;\n","import s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"button\":\"Form_button__243jh\",\"input\":\"Form_input__2ESfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tell\":\"ContactList_tell__2eCh7\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}